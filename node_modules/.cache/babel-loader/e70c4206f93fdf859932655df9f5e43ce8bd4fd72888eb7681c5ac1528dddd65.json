{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eryan_\\\\Desktop\\\\NewTpreact\\\\projet-shop\\\\src\\\\component\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Route, Routes } from 'react-router-dom';\nimport '../styles/App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ProductList from './ProductList';\nimport Nav from './NavBar';\nimport Header from './Header';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]); // État pour stocker les données de l'API\n  const [loading, setLoading] = useState(true); // État pour gérer le chargement\n\n  useEffect(() => {\n    // Utilisez fetch pour envoyer une requête GET à l'API\n    fetch('https://api.example.com/data').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json(); // Convertir la réponse en JSON\n    }).then(result => {\n      setData(result); // Mettre à jour l'état avec les données de l'API\n      setLoading(false); // Indiquer que le chargement est terminé\n    }).catch(error => {\n      console.error('There was a problem with the fetch operation:', error);\n      setLoading(false); // Indiquer que le chargement est terminé (même en cas d'erreur)\n    });\n  }, []); // Le tableau vide [] en tant que deuxième argument signifie que cela s'exécute une seule fois, équivalent à componentDidMount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Chargement en cours...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item.name\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProductList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YP7e7Smzxlgf2d3MqLcgRZjo83U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Route","Routes","ProductList","Nav","Header","useState","useEffect","jsxDEV","_jsxDEV","App","_s","data","setData","loading","setLoading","fetch","then","response","ok","Error","json","result","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","name","id","_c","$RefreshReg$"],"sources":["C:/Users/Eryan_/Desktop/NewTpreact/projet-shop/src/component/App.js"],"sourcesContent":["import { Route, Routes } from 'react-router-dom';\nimport '../styles/App.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ProductList from './ProductList';\n\n\nimport Nav from './NavBar';\nimport Header from './Header';\nimport { useState, useEffect } from 'react';\n\n\n  \n\nfunction App() {\n\n  const [data, setData] = useState([]); // État pour stocker les données de l'API\n  const [loading, setLoading] = useState(true); // État pour gérer le chargement\n\n  useEffect(() => {\n    // Utilisez fetch pour envoyer une requête GET à l'API\n    fetch('https://api.example.com/data')\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json(); // Convertir la réponse en JSON\n      })\n      .then((result) => {\n        setData(result); // Mettre à jour l'état avec les données de l'API\n        setLoading(false); // Indiquer que le chargement est terminé\n      })\n      .catch((error) => {\n        console.error('There was a problem with the fetch operation:', error);\n        setLoading(false); // Indiquer que le chargement est terminé (même en cas d'erreur)\n      });\n  }, []); // Le tableau vide [] en tant que deuxième argument signifie que cela s'exécute une seule fois, équivalent à componentDidMount\n\n  return (\n    <div className=\"App\">\n      {loading ? (\n        <p>Chargement en cours...</p>\n      ) : (\n        <ul>\n          {data.map((item) => (\n            <li key={item.id}>{item.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n  return (\n    <div className=\"App\">\n\n      <Nav />\n      <Header/>\n      <ProductList/>\n\n    </div>\n  );\n}\n\n\n  \n\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAChD,OAAO,mBAAmB;AAC1B,OAAO,sCAAsC;AAC7C,OAAOC,WAAW,MAAM,eAAe;AAGvC,OAAOC,GAAG,MAAM,UAAU;AAC1B,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAK5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9CC,SAAS,CAAC,MAAM;IACd;IACAS,KAAK,CAAC,8BAA8B,CAAC,CAClCC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDJ,IAAI,CAAEK,MAAM,IAAK;MAChBT,OAAO,CAACS,MAAM,CAAC,CAAC,CAAC;MACjBP,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,CACDQ,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;MACrET,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEN,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,EACjBb,OAAO,gBACNL,OAAA;MAAAkB,QAAA,EAAG;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAE7BtB,OAAA;MAAAkB,QAAA,EACGf,IAAI,CAACoB,GAAG,CAAEC,IAAI,iBACbxB,OAAA;QAAAkB,QAAA,EAAmBM,IAAI,CAACC;MAAI,GAAnBD,IAAI,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAClC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EACL;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;EAER,oBACEtB,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAElBlB,OAAA,CAACL,GAAG;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACPtB,OAAA,CAACJ,MAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACTtB,OAAA,CAACN,WAAW;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEX,CAAC;AAEV;AAACpB,EAAA,CA9CQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAoDZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}